using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ucf
{
    public enum MrcpConst : int
    {
        RECOGNIZER_SET_PARAMS = 0,
        RECOGNIZER_GET_PARAMS,
        RECOGNIZER_DEFINE_GRAMMAR,
        RECOGNIZER_RECOGNIZE,
        RECOGNIZER_INTERPRET,
        RECOGNIZER_GET_RESULT,
        RECOGNIZER_START_INPUT_TIMERS,
        RECOGNIZER_STOP,
        RECOGNIZER_START_PHRASE_ENROLLMENT,
        RECOGNIZER_ENROLLMENT_ROLLBACK,
        RECOGNIZER_END_PHRASE_ENROLLMENT,
        RECOGNIZER_MODIFY_PHRASE,
        RECOGNIZER_DELETE_PHRASE,

        GENERIC_HEADER_ACTIVE_REQUEST_ID_LIST,
	    GENERIC_HEADER_PROXY_SYNC_ID,
	    GENERIC_HEADER_ACCEPT_CHARSET,
	    GENERIC_HEADER_CONTENT_TYPE,
	    GENERIC_HEADER_CONTENT_ID,
        GENERIC_HEADER_CHANNEL_ID,
	    GENERIC_HEADER_CONTENT_BASE,
	    GENERIC_HEADER_CONTENT_ENCODING,
	    GENERIC_HEADER_CONTENT_LOCATION,
	    GENERIC_HEADER_CONTENT_LENGTH,
	    GENERIC_HEADER_CACHE_CONTROL,
	    GENERIC_HEADER_LOGGING_TAG,
	    GENERIC_HEADER_VENDOR_SPECIFIC_PARAMS,
	
	    GENERIC_HEADER_ACCEPT,
	    GENERIC_HEADER_FETCH_TIMEOUT,
	    GENERIC_HEADER_SET_COOKIE,
        GENERIC_HEADER_SET_COOKIE2,

        RECOGNIZER_HEADER_CONFIDENCE_THRESHOLD,
        RECOGNIZER_HEADER_SENSITIVITY_LEVEL,
        RECOGNIZER_HEADER_SPEED_VS_ACCURACY,
        RECOGNIZER_HEADER_N_BEST_LIST_LENGTH,
        RECOGNIZER_HEADER_NO_INPUT_TIMEOUT,
        RECOGNIZER_HEADER_RECOGNITION_TIMEOUT,
        RECOGNIZER_HEADER_WAVEFORM_URI,
        RECOGNIZER_HEADER_COMPLETION_CAUSE,
        RECOGNIZER_HEADER_RECOGNIZER_CONTEXT_BLOCK,
        RECOGNIZER_HEADER_START_INPUT_TIMERS,
        RECOGNIZER_HEADER_SPEECH_COMPLETE_TIMEOUT,
        RECOGNIZER_HEADER_SPEECH_INCOMPLETE_TIMEOUT,
        RECOGNIZER_HEADER_DTMF_INTERDIGIT_TIMEOUT,
        RECOGNIZER_HEADER_DTMF_TERM_TIMEOUT,
        RECOGNIZER_HEADER_DTMF_TERM_CHAR,
        RECOGNIZER_HEADER_FAILED_URI,
        RECOGNIZER_HEADER_FAILED_URI_CAUSE,
        RECOGNIZER_HEADER_SAVE_WAVEFORM,
        RECOGNIZER_HEADER_NEW_AUDIO_CHANNEL,
        RECOGNIZER_HEADER_SPEECH_LANGUAGE,
        RECOGNIZER_HEADER_INPUT_TYPE,
        RECOGNIZER_HEADER_INPUT_WAVEFORM_URI,
        RECOGNIZER_HEADER_COMPLETION_REASON,
        RECOGNIZER_HEADER_MEDIA_TYPE,
        RECOGNIZER_HEADER_VER_BUFFER_UTTERANCE,
        RECOGNIZER_HEADER_RECOGNITION_MODE,
        RECOGNIZER_HEADER_CANCEL_IF_QUEUE,
        RECOGNIZER_HEADER_HOTWORD_MAX_DURATION,
        RECOGNIZER_HEADER_HOTWORD_MIN_DURATION,
        RECOGNIZER_HEADER_INTERPRET_TEXT,
        RECOGNIZER_HEADER_DTMF_BUFFER_TIME,
        RECOGNIZER_HEADER_CLEAR_DTMF_BUFFER,
        RECOGNIZER_HEADER_EARLY_NO_MATCH,
        RECOGNIZER_HEADER_NUM_MIN_CONSISTENT_PRONUNCIATIONS,
        RECOGNIZER_HEADER_CONSISTENCY_THRESHOLD,
        RECOGNIZER_HEADER_CLASH_THRESHOLD,
        RECOGNIZER_HEADER_PERSONAL_GRAMMAR_URI,
        RECOGNIZER_HEADER_ENROLL_UTTERANCE,
        RECOGNIZER_HEADER_PHRASE_ID,
        RECOGNIZER_HEADER_PHRASE_NL,
        RECOGNIZER_HEADER_WEIGHT,
        RECOGNIZER_HEADER_SAVE_BEST_WAVEFORM,
        RECOGNIZER_HEADER_NEW_PHRASE_ID,
        RECOGNIZER_HEADER_CONFUSABLE_PHRASES_URI,
        RECOGNIZER_HEADER_ABORT_PHRASE_ENROLLMENT,

        FIRST_LINE_type,
	    FIRST_LINE_version,
	    FIRST_LINE_length,
	    FIRST_LINE_request_id,
	    FIRST_LINE_method_name,
	    FIRST_LINE_method_id,
	    FIRST_LINE_status_code,
	    FIRST_LINE_request_state,
    }

    public interface IMrcpMessage
    {        
        IMrcpMessage SetHearder(int type, string content);
	    IMrcpMessage SetBody(string content);
	    string GetHeader(int type);
	    string GetBody();
        Dictionary<int, Object> GetFirstLine();
    }

    public interface IMrcpChannel
    {
        IMrcpMessage CreateMessage(int type);
        void SendMessage(IMrcpMessage msg);        
        string GetChannelId();
        IMrcpChannelMgr GetMgr();
    }

    public interface IMrcpChannelMgr
    {
        int Count();
        ICollection<IMrcpChannel> Channels { get; }
    }
}
